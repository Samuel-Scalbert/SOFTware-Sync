{"application": "software-mentions", "version": "0.8.0", "date": "2024-03-07T09:59+0000", "md5": "2331512504FAA8ED0F965D54BBD13E0E", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "PyKeops", "normalizedForm": "PyKeops", "offsetStart": 0, "offsetEnd": 7}, "context": "PyKeops carries out the naive and direct computations using online map reduce schemes from CUDA routines for summations. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0012829899787902832}, "created": {"value": false, "score": 1.0669231414794922e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984012246131897}, "created": {"value": false, "score": 1.2099742889404297e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "package", "normalizedForm": "package", "offsetStart": 17, "offsetEnd": 24}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "All codes in the package scale to 2 and 3 dimensions directly, and most codes are agnostic and can be run on CPU or GPU with some change in run parameters.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006483912467956543}, "created": {"value": false, "score": 4.750490188598633e-05}, "shared": {"value": false, "score": 2.9206275939941406e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9562262296676636}, "created": {"value": false, "score": 0.023401260375976562}, "shared": {"value": false, "score": 0.00019025802612304688}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "package", "normalizedForm": "package", "offsetStart": 20, "offsetEnd": 27}, "language": {"rawForm": "Python", "normalizedForm": "Python", "wikidataId": "Q28865", "offsetStart": 13, "offsetEnd": 19}, "context": "present in a Python package at the private repository 3 . ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9562262296676636}, "created": {"value": false, "score": 0.023401260375976562}, "shared": {"value": false, "score": 0.00019025802612304688}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9562262296676636}, "created": {"value": false, "score": 0.023401260375976562}, "shared": {"value": false, "score": 0.00019025802612304688}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PyKeops", "normalizedForm": "PyKeops", "offsetStart": 33, "offsetEnd": 40}, "context": "a) Brute force calculation using PyKeops: The computation of (12a) and (12b) can be highly parallelized, which is amenable to efficient GPU implementations. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.003200352191925049}, "created": {"value": false, "score": 1.2099742889404297e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984012246131897}, "created": {"value": false, "score": 1.2099742889404297e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CuPy", "normalizedForm": "CuPy", "offsetStart": 42, "offsetEnd": 46}, "context": "To efficiently utilize a GPU, we used the CuPy module [53].", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999317526817322}, "created": {"value": false, "score": 2.8014183044433594e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999317526817322}, "created": {"value": false, "score": 2.8014183044433594e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "references": [{"label": "[53]", "normalizedForm": "[53]", "refKey": 53, "offsetStart": 18812, "offsetEnd": 18816}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "gpuNUFFT", "normalizedForm": "gpuNUFFT", "offsetStart": 45, "offsetEnd": 58}, "context": "For this, we implemented python wrappers for gpuNUFFT [58] which implements the NUFFT operator in CUDA and utilizes cuBLAS and cuFFT libraries to be efficient in speed and memory. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.971857070922852e-05}, "created": {"value": true, "score": 0.9967671036720276}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 9.971857070922852e-05}, "created": {"value": true, "score": 0.9967671036720276}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PyKeops", "normalizedForm": "PyKeops", "offsetStart": 48, "offsetEnd": 55}, "context": "For the sake of efficient memory usage, we used PyKeops, a library that permits low cost calculations of large kernel operations [48]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9984012246131897}, "created": {"value": false, "score": 8.285045623779297e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984012246131897}, "created": {"value": false, "score": 1.2099742889404297e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "offsetStart": 64, "offsetEnd": 71}, "context": "Carrying out such computations on array centric frameworks like PyTorch and Tensorflow would require the use of huge p \u00d7 p-dimensional matrices. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0998460054397583}, "created": {"value": false, "score": 4.845857620239258e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0998460054397583}, "created": {"value": false, "score": 4.845857620239258e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "pysap-mri", "normalizedForm": "pysap-mri", "offsetStart": 67, "offsetEnd": 82}, "context": "The implementation of the reconstruction was completely done using pysap-mri1  [59], the plugin of PySAP [61] dedicated to MR image reconstruction. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998621940612793}, "created": {"value": false, "score": 5.424022674560547e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998621940612793}, "created": {"value": false, "score": 0.00019478797912597656}, "shared": {"value": false, "score": 0.0006771683692932129}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Tensorflow", "normalizedForm": "Tensorflow", "offsetStart": 76, "offsetEnd": 86}, "context": "Carrying out such computations on array centric frameworks like PyTorch and Tensorflow would require the use of huge p \u00d7 p-dimensional matrices. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0998460054397583}, "created": {"value": false, "score": 4.845857620239258e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0998460054397583}, "created": {"value": false, "score": 4.845857620239258e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "package", "normalizedForm": "package", "offsetStart": 89, "offsetEnd": 96}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Interested researchers are requested to contact the authors for obtaining access to this package 4 .", "mentionContextAttributes": {"used": {"value": false, "score": 0.012509822845458984}, "created": {"value": false, "score": 0.0074349045753479}, "shared": {"value": false, "score": 0.000156402587890625}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9562262296676636}, "created": {"value": false, "score": 0.023401260375976562}, "shared": {"value": false, "score": 0.00019025802612304688}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "pysap-mri", "normalizedForm": "pysap-mri", "offsetStart": 93, "offsetEnd": 104}, "context": "For the sake of reproducibility, the code for MR image reconstruction is made open source in pysap-mri 6 , a plugin of the PySAP software [61]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0945623517036438}, "created": {"value": false, "score": 0.00019478797912597656}, "shared": {"value": false, "score": 0.0006771683692932129}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998621940612793}, "created": {"value": false, "score": 0.00019478797912597656}, "shared": {"value": false, "score": 0.0006771683692932129}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PySAP", "normalizedForm": "PySAP", "offsetStart": 99, "offsetEnd": 109}, "context": "The implementation of the reconstruction was completely done using pysap-mri1  [59], the plugin of PySAP [61] dedicated to MR image reconstruction. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998621940612793}, "created": {"value": false, "score": 5.424022674560547e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998621940612793}, "created": {"value": false, "score": 0.00019478797912597656}, "shared": {"value": false, "score": 0.0006771683692932129}}, "references": [{"label": "[61]", "normalizedForm": "[61]", "refKey": 61}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cuBLAS", "normalizedForm": "cuBLAS", "offsetStart": 116, "offsetEnd": 122}, "context": "For this, we implemented python wrappers for gpuNUFFT [58] which implements the NUFFT operator in CUDA and utilizes cuBLAS and cuFFT libraries to be efficient in speed and memory. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.971857070922852e-05}, "created": {"value": true, "score": 0.9967671036720276}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 9.971857070922852e-05}, "created": {"value": true, "score": 0.9967671036720276}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PySAP", "normalizedForm": "PySAP", "offsetStart": 123, "offsetEnd": 128}, "context": "For the sake of reproducibility, the code for MR image reconstruction is made open source in pysap-mri 6 , a plugin of the PySAP software [61]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0945623517036438}, "created": {"value": false, "score": 0.00019478797912597656}, "shared": {"value": false, "score": 0.0006771683692932129}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998621940612793}, "created": {"value": false, "score": 0.00019478797912597656}, "shared": {"value": false, "score": 0.0006771683692932129}}, "references": [{"label": "[61]", "normalizedForm": "[61]", "refKey": 61, "offsetStart": 29174, "offsetEnd": 29178}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cuFFT", "normalizedForm": "cuFFT", "offsetStart": 127, "offsetEnd": 132}, "context": "For this, we implemented python wrappers for gpuNUFFT [58] which implements the NUFFT operator in CUDA and utilizes cuBLAS and cuFFT libraries to be efficient in speed and memory. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.971857070922852e-05}, "created": {"value": true, "score": 0.9967671036720276}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 9.971857070922852e-05}, "created": {"value": true, "score": 0.9967671036720276}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PILOT      BJORK", "normalizedForm": "PILOT BJORK", "offsetStart": 135, "offsetEnd": 156}, "context": "Additionally, to the best of our knowledge, the only works that have learned a non-Cartesian trajectory under hardware constraints are PILOT [34] BJORK [38] and 3D FLAT [35] for 2D and 3D imaging, respectively. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007480978965759277}, "created": {"value": false, "score": 5.793571472167969e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0007480978965759277}, "created": {"value": false, "score": 5.793571472167969e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}], "references": [{"refKey": 53, "tei": "<biblStruct xml:id=\"b53\">\n\t<monogr>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">R</forename><surname>Okuta</surname></persName>\n\t\t</author>\n\t\t<title level=\"m\">Cupy : A numpy-compatible library for nvidia gpu calculations</title>\n\t\t<imprint>\n\t\t\t<date>2017</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 61, "tei": "<biblStruct xml:id=\"b61\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">PySAP: Python Sparse Data Analysis Package for multidisciplinary image processing</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">S</forename><surname>Farrens</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">A</forename><surname>Grigis</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">L</forename><surname>El Gueddari</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Z</forename><surname>Ramzi</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Chaithya</forename><surname>G.R.</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">S</forename><surname>Starck</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">B</forename><surname>Sarthou</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">H</forename><surname>Cherkaoui</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">P</forename><surname>Ciuciu</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J-L</forename><surname>Starck</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1016/j.ascom.2020.100402</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Astronomy and Computing</title>\n\t\t<title level=\"j\" type=\"abbrev\">Astronomy and Computing</title>\n\t\t<idno type=\"ISSN\">2213-1337</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">32</biblScope>\n\t\t\t<biblScope unit=\"page\">100402</biblScope>\n\t\t\t<date type=\"published\" when=\"2020-07\">2020</date>\n\t\t\t<publisher>Elsevier BV</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 140695, "id": "b32d4344b08d86b98d00fdfafa8b631c3ece38a4", "metadata": {"id": "b32d4344b08d86b98d00fdfafa8b631c3ece38a4"}, "original_file_path": "../../datalake/downloads/ART_test_xml/hal-03090471v2.grobid.tei.xml", "file_name": "hal-03090471v2.grobid.tei.xml"}
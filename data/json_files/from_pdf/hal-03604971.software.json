{"application": "software-mentions", "version": "0.8.0", "date": "2024-03-06T15:42+0000", "md5": "78FEC1DEC35A56456186840618383276", "pages": [{"page_height": 841.89, "page_width": 595.28}, {"page_height": 792.0, "page_width": 612.0}, {"page_height": 792.0, "page_width": 612.0}, {"page_height": 792.0, "page_width": 612.0}, {"page_height": 792.0, "page_width": 612.0}, {"page_height": 792.0, "page_width": 612.0}], "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 0, "offsetEnd": 4, "boundingBoxes": [{"p": 4, "x": 299.04, "y": 251.262, "w": 20.97, "h": 9.387}]}, "context": "Guix provides a command-line interface sim- ilar to that of other package managers: guix install python, for instance, installs the Python interpreter.", "mentionContextAttributes": {"used": {"value": false, "score": 3.916025161743164e-05}, "created": {"value": false, "score": 0.00019073486328125}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 0, "offsetEnd": 4, "boundingBoxes": [{"p": 4, "x": 284.16, "y": 680.504, "w": 20.97, "h": 9.387}]}, "context": "Guix makes it easy to define package variants, so we can define package variants optimized for a specific CPU-compiled with -march=skylake, for instance.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00013566017150878906}, "created": {"value": false, "score": 0.0003046989440917969}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 0, "offsetEnd": 4, "boundingBoxes": [{"p": 5, "x": 236.761, "y": 500.263, "w": 20.97, "h": 9.387}]}, "context": "Guix records package transformation options that were used so it can \"replay\" them.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": false, "score": 1.245737075805664e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix", "normalizedForm": "guix", "offsetStart": 2, "offsetEnd": 6, "boundingBoxes": [{"p": 5, "x": 126.72, "y": 221.418, "w": 15.865, "h": 6.408}]}, "context": "$ guix shell --tune eigen-benchmarks --\\ benchBlasGemm 240 240 240 guix shell: tuning for CPU skylake 240 x 240 x 240 cblas: 0.208547 (15.908", "mentionContextAttributes": {"used": {"value": true, "score": 0.790754497051239}, "created": {"value": false, "score": 4.351139068603516e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.790754497051239}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix", "normalizedForm": "guix", "offsetStart": 2, "offsetEnd": 6, "boundingBoxes": [{"p": 5, "x": 126.72, "y": 571.34, "w": 15.865, "h": 6.408}]}, "context": "$ guix shell eigen-benchmarks --tune guix shell: tuning for CPU skylake [env]$ guix package --export-manifest \\ -p $GUIX ENVIRONMENT (use-modules (guix transformations))  (define transform1 (options->transformation '((tune .", "mentionContextAttributes": {"used": {"value": false, "score": 0.013786375522613525}, "created": {"value": false, "score": 3.2782554626464844e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.790754497051239}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spack", "normalizedForm": "Spack", "offsetStart": 4, "offsetEnd": 9, "boundingBoxes": [{"p": 4, "x": 159.36, "y": 589.541, "w": 25.77, "h": 9.387}]}, "context": "The Spack [7] and EasyBuild [8] package managers address that by rebuilding software on the target computer, which allows them to instruct the compiler to optimize for the host CPU.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0021046996116638184}, "created": {"value": false, "score": 0.00012564659118652344}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0021046996116638184}, "created": {"value": false, "score": 0.0004195570945739746}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "references": [{"label": "[7]", "normalizedForm": "[7]", "refKey": 6, "offsetStart": 9904, "offsetEnd": 9908, "boundingBoxes": [{"p": 4, "x": 189.36, "y": 589.541, "w": 12.256499999999988, "h": 9.387000000000057}]}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 13, "offsetEnd": 17, "boundingBoxes": [{"p": 5, "x": 202.2, "y": 394.062, "w": 20.97, "h": 9.387}]}, "context": "This ensures Guix does not end up rebuild- ing packages that could not possibly benefit from micro-architecture-specific optimizations, which would be a waste of resources.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00023484230041503906}, "created": {"value": false, "score": 0.0009262561798095703}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 15, "offsetEnd": 19, "boundingBoxes": [{"p": 4, "x": 359.399, "y": 147.702, "w": 20.97, "h": 9.387}]}, "context": "To avoid that, Guix builds software in isolated environments, as pioneered by Nix [1, 6], and its package collection is self-contained-it does not rely on external software packages.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001571178436279297}, "created": {"value": false, "score": 0.006353318691253662}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "EasyBuild", "normalizedForm": "EasyBuild", "offsetStart": 15, "offsetEnd": 24, "boundingBoxes": [{"p": 4, "x": 142.559, "y": 654.582, "w": 43.65, "h": 9.387}]}, "context": "Unfortunately, EasyBuild and Spack both have limited support for reproducible deploy- ment-they do not, in general, guarantee that you can redeploy the same software environment  on different machines, or at different points in time.", "mentionContextAttributes": {"used": {"value": false, "score": 5.2034854888916016e-05}, "created": {"value": false, "score": 0.0004195570945739746}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0021046996116638184}, "created": {"value": false, "score": 0.0004195570945739746}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 7}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 16, "offsetEnd": 20, "boundingBoxes": [{"p": 4, "x": 371.04, "y": 406.903, "w": 20.97, "h": 9.387}]}, "context": "Quite uniquely, Guix supports \"time travel- ing\": with guix time-machine, users can run a specific revision of Guix and use it to deploy packages as they were defined in that revision.", "mentionContextAttributes": {"used": {"value": false, "score": 4.738569259643555e-05}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "EasyBuild", "normalizedForm": "EasyBuild", "offsetStart": 18, "offsetEnd": 27, "boundingBoxes": [{"p": 4, "x": 225.36, "y": 589.541, "w": 43.65, "h": 9.387}]}, "context": "The Spack [7] and EasyBuild [8] package managers address that by rebuilding software on the target computer, which allows them to instruct the compiler to optimize for the host CPU.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0021046996116638184}, "created": {"value": false, "score": 0.00012564659118652344}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0021046996116638184}, "created": {"value": false, "score": 0.0004195570945739746}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 7, "offsetStart": 9923, "offsetEnd": 9927, "boundingBoxes": [{"p": 4, "x": 58.92, "y": 602.621, "w": 12.256500000000003, "h": 9.387000000000057}]}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 19, "offsetEnd": 23, "boundingBoxes": [{"p": 2, "x": 248.159, "y": 573.342, "w": 20.97, "h": 9.387}]}, "context": "We like to present Guix as a key element of the reproducible research toolbox: as more research output is produced by software, the ability to verify and validate research results depends on the ability to re- deploy and re-run the software.", "mentionContextAttributes": {"used": {"value": false, "score": 9.459257125854492e-05}, "created": {"value": true, "score": 0.9997494220733643}, "shared": {"value": false, "score": 5.185604095458984e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 19, "offsetEnd": 23, "boundingBoxes": [{"p": 4, "x": 313.92, "y": 199.662, "w": 20.97, "h": 9.387}]}, "context": "This is what makes Guix builds reproducible bit-for-bit-or in other words, verifiable [10].", "mentionContextAttributes": {"used": {"value": false, "score": 8.541345596313477e-05}, "created": {"value": false, "score": 0.0014504790306091309}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 26, "offsetEnd": 30, "boundingBoxes": [{"p": 5, "x": 251.28, "y": 474.223, "w": 18.643066666666666, "h": 9.387}]}, "context": "When --tune is used, from Guix's viewpoint, it is just an alternate, but well-defined depen- dency graph that gets built.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008252263069152832}, "created": {"value": false, "score": 3.534555435180664e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spack", "normalizedForm": "Spack", "offsetStart": 29, "offsetEnd": 34, "boundingBoxes": [{"p": 4, "x": 217.08, "y": 654.582, "w": 25.77, "h": 9.387}]}, "context": "Unfortunately, EasyBuild and Spack both have limited support for reproducible deploy- ment-they do not, in general, guarantee that you can redeploy the same software environment  on different machines, or at different points in time.", "mentionContextAttributes": {"used": {"value": false, "score": 5.2034854888916016e-05}, "created": {"value": false, "score": 0.0004195570945739746}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0021046996116638184}, "created": {"value": false, "score": 0.0004195570945739746}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "references": [{"label": "[7]", "normalizedForm": "[7]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CentOS", "normalizedForm": "CentOS", "offsetStart": 33, "offsetEnd": 39, "boundingBoxes": [{"p": 3, "x": 434.88, "y": 314.982, "w": 33.198, "h": 9.387}]}, "context": "Distributions such as Debian and CentOS provide the conve- nience of fast automated deployment, thanks to pre-built binaries; asking users to either recom- pile part of their software stack or give up on performance is not a reasonable alternative.", "mentionContextAttributes": {"used": {"value": false, "score": 4.3332576751708984e-05}, "created": {"value": false, "score": 0.00018644332885742188}, "shared": {"value": false, "score": 4.947185516357422e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003056526184082031}, "created": {"value": false, "score": 0.0003352165222167969}, "shared": {"value": false, "score": 4.947185516357422e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix", "normalizedForm": "guix", "offsetStart": 37, "offsetEnd": 41, "boundingBoxes": [{"p": 5, "x": 118.68, "y": 580.34, "w": 15.865, "h": 6.408}]}, "context": "$ guix shell eigen-benchmarks --tune guix shell: tuning for CPU skylake [env]$ guix package --export-manifest \\ -p $GUIX ENVIRONMENT (use-modules (guix transformations))  (define transform1 (options->transformation '((tune .", "mentionContextAttributes": {"used": {"value": false, "score": 0.013786375522613525}, "created": {"value": false, "score": 3.2782554626464844e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.790754497051239}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Eigen", "normalizedForm": "Eigen", "offsetStart": 39, "offsetEnd": 44, "boundingBoxes": [{"p": 5, "x": 168.36, "y": 176.262, "w": 22.4605, "h": 9.387}]}, "url": {"rawForm": "https://eigen.tuxfamily.org)", "normalizedForm": "https://eigen.tuxfamily.org)"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "For example, here is how you would run Eigen's matrix multiplication bench- mark from the eigen-benchmarks package with micro-architecture tuning:", "mentionContextAttributes": {"used": {"value": true, "score": 0.999060332775116}, "created": {"value": false, "score": 0.00017189979553222656}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999060332775116}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[7]", "normalizedForm": "[7]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 55, "offsetEnd": 59, "boundingBoxes": [{"p": 2, "x": 245.52, "y": 651.343, "w": 18.900000000000002, "h": 9.387}]}, "context": "We present a recently-introduced CPU-tuning option for Guix, the design choices we made, and how this affects reproducibility.", "mentionContextAttributes": {"used": {"value": false, "score": 9.840726852416992e-05}, "created": {"value": true, "score": 0.9999133944511414}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix", "normalizedForm": "guix", "offsetStart": 55, "offsetEnd": 59, "boundingBoxes": [{"p": 4, "x": 335.04, "y": 420.346, "w": 21.09, "h": 8.442}]}, "context": "Quite uniquely, Guix supports \"time travel- ing\": with guix time-machine, users can run a specific revision of Guix and use it to deploy packages as they were defined in that revision.", "mentionContextAttributes": {"used": {"value": false, "score": 4.738569259643555e-05}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.790754497051239}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 57, "offsetEnd": 61, "boundingBoxes": [{"p": 4, "x": 284.16, "y": 355.303, "w": 20.97, "h": 9.387}]}, "context": "To offer the level of flexibility that HPC users expect, Guix lets users customize packages via package transformation options on the command line-for instance to swap two packages in the dependency graph-or through programming interfaces [2].", "mentionContextAttributes": {"used": {"value": false, "score": 4.571676254272461e-05}, "created": {"value": false, "score": 0.0002893209457397461}, "shared": {"value": false, "score": 2.6881694793701172e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix install", "normalizedForm": "guix install", "offsetStart": 57, "offsetEnd": 69, "boundingBoxes": [{"p": 5, "x": 166.67401999999998, "y": 137.262, "w": 59.00294250000002, "h": 9.387}]}, "context": "Users can pass --tune to any of the command- line tools (guix install, guix shell, etc.) and that causes \"tunable\" packages to be optimized for the host CPU.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00027823448181152344}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.9669532775878906e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00027823448181152344}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix", "normalizedForm": "guix", "offsetStart": 59, "offsetEnd": 63, "boundingBoxes": [{"p": 5, "x": 420.599, "y": 70.5454, "w": 21.09, "h": 8.442}]}, "context": "The manifest above is a code snippet that can be passed to guix shell or guix package to redeploy the package with the same tuning parameters.", "mentionContextAttributes": {"used": {"value": false, "score": 0.031756818294525146}, "created": {"value": false, "score": 8.159875869750977e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.790754497051239}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 60, "offsetEnd": 64, "boundingBoxes": [{"p": 2, "x": 235.68, "y": 547.422, "w": 18.900000000000002, "h": 9.387}]}, "context": "This question is par- ticularly acute in the context of GNU Guix, a software deployment tool with strong support for reproducible deployment.", "mentionContextAttributes": {"used": {"value": false, "score": 3.4868717193603516e-05}, "created": {"value": false, "score": 0.0031220316886901855}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 67, "offsetEnd": 71, "boundingBoxes": [{"p": 2, "x": 280.679, "y": 329.826, "w": 18.90496, "h": 9.0859}]}, "context": "We propose package multi-versioning, a technique developed for GNU Guix, a tool for reproducible software deployment, and show that it allows us to implement CPU tuning without compromising on reproducibility and provenance tracking.", "mentionContextAttributes": {"used": {"value": false, "score": 9.340047836303711e-05}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 5.185604095458984e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix", "normalizedForm": "guix", "offsetStart": 67, "offsetEnd": 71, "boundingBoxes": [{"p": 5, "x": 118.68, "y": 239.299, "w": 15.865, "h": 6.408}]}, "context": "$ guix shell --tune eigen-benchmarks --\\ benchBlasGemm 240 240 240 guix shell: tuning for CPU skylake 240 x 240 x 240 cblas: 0.208547 (15.908", "mentionContextAttributes": {"used": {"value": true, "score": 0.790754497051239}, "created": {"value": false, "score": 4.351139068603516e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.790754497051239}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix shell", "normalizedForm": "guix shell", "offsetStart": 71, "offsetEnd": 81, "boundingBoxes": [{"p": 5, "x": 233.88, "y": 137.745, "w": 49.98750000000001, "h": 8.442000000000007}]}, "context": "Users can pass --tune to any of the command- line tools (guix install, guix shell, etc.) and that causes \"tunable\" packages to be optimized for the host CPU.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00027823448181152344}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.9669532775878906e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00027823448181152344}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix package", "normalizedForm": "guix package", "offsetStart": 73, "offsetEnd": 85, "boundingBoxes": [{"p": 5, "x": 490.559, "y": 70.5454, "w": 63.689999999999884, "h": 8.442000000000007}]}, "context": "The manifest above is a code snippet that can be passed to guix shell or guix package to redeploy the package with the same tuning parameters.", "mentionContextAttributes": {"used": {"value": false, "score": 0.031756818294525146}, "created": {"value": false, "score": 8.159875869750977e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.031756818294525146}, "created": {"value": false, "score": 8.159875869750977e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "C", "normalizedForm": "C", "offsetStart": 79, "offsetEnd": 80, "boundingBoxes": [{"p": 3, "x": 474.84, "y": 471.822, "w": 7.0035, "h": 9.387}]}, "context": "Many pieces of performance-critical software al- ready use this technique: the C standard library (libc) contains multiple versions of its string handling and math routines, the GMP library for multi-precision arithmetic uses FMV, and so do software packages ranging from cryptogra- phy libraries (Libgcrypt, Nettle) to linear algebra (OpenBLAS, FFTW).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix", "normalizedForm": "guix", "offsetStart": 79, "offsetEnd": 83, "boundingBoxes": [{"p": 5, "x": 146.64, "y": 589.34, "w": 15.865, "h": 6.408}]}, "context": "$ guix shell eigen-benchmarks --tune guix shell: tuning for CPU skylake [env]$ guix package --export-manifest \\ -p $GUIX ENVIRONMENT (use-modules (guix transformations))  (define transform1 (options->transformation '((tune .", "mentionContextAttributes": {"used": {"value": false, "score": 0.013786375522613525}, "created": {"value": false, "score": 3.2782554626464844e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.790754497051239}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix", "normalizedForm": "guix", "offsetStart": 84, "offsetEnd": 88, "boundingBoxes": [{"p": 4, "x": 473.28, "y": 264.825, "w": 21.09, "h": 8.442}]}, "context": "Guix provides a command-line interface sim- ilar to that of other package managers: guix install python, for instance, installs the Python interpreter.", "mentionContextAttributes": {"used": {"value": false, "score": 3.916025161743164e-05}, "created": {"value": false, "score": 0.00019073486328125}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.790754497051239}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ARPACK-\nNG", "normalizedForm": "ARPACK- NG", "offsetStart": 87, "offsetEnd": 97, "boundingBoxes": [{"p": 4, "x": 224.52, "y": 434.021, "w": 44.65639999999999, "h": 9.387}, {"p": 4, "x": 58.92, "y": 446.981, "w": 15.141, "h": 9.387}]}, "context": "It can have a very concrete impact on performance since many scientific packages-the ARPACK- NG library for solving eigenvalue problems, the Ceres solver for optimization problems, the FEn- iCSx platform for solving differential equations, to name a few-depend on Eigen.", "mentionContextAttributes": {"used": {"value": false, "score": 4.4405460357666016e-05}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.4405460357666016e-05}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 92, "offsetEnd": 96, "boundingBoxes": [{"p": 4, "x": 435.6, "y": 510.944, "w": 20.97, "h": 9.387}]}, "context": "The command below deploys Python, NumPy, and their depen- dencies as they were defined in a Guix revision from October 2021:", "mentionContextAttributes": {"used": {"value": true, "score": 0.8455513119697571}, "created": {"value": false, "score": 0.00028133392333984375}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "libc", "normalizedForm": "libc", "offsetStart": 99, "offsetEnd": 103, "boundingBoxes": [{"p": 3, "x": 347.70275000000004, "y": 484.782, "w": 15.131, "h": 9.387}]}, "context": "Many pieces of performance-critical software al- ready use this technique: the C standard library (libc) contains multiple versions of its string handling and math routines, the GMP library for multi-precision arithmetic uses FMV, and so do software packages ranging from cryptogra- phy libraries (Libgcrypt, Nettle) to linear algebra (OpenBLAS, FFTW).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Guix", "normalizedForm": "Guix", "offsetStart": 111, "offsetEnd": 115, "boundingBoxes": [{"p": 4, "x": 380.28, "y": 432.943, "w": 20.97, "h": 9.387}]}, "context": "Quite uniquely, Guix supports \"time travel- ing\": with guix time-machine, users can run a specific revision of Guix and use it to deploy packages as they were defined in that revision.", "mentionContextAttributes": {"used": {"value": false, "score": 4.738569259643555e-05}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965587854385376}, "created": {"value": true, "score": 0.9999287724494934}, "shared": {"value": false, "score": 2.6881694793701172e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Eigen", "normalizedForm": "Eigen", "offsetStart": 121, "offsetEnd": 126, "boundingBoxes": [{"p": 4, "x": 58.9199, "y": 226.062, "w": 22.587500000000002, "h": 9.387}]}, "url": {"rawForm": "https://eigen.tuxfamily.org)", "normalizedForm": "https://eigen.tuxfamily.org)"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "There is no shortage of C++ header-only math libraries providing effi- cient, optimized SIMD versions of their routines: Eigen, MIPP, xsimd and xtensor, SIMD Every- where (SIMDe), Highway, and many more.", "mentionContextAttributes": {"used": {"value": false, "score": 4.202127456665039e-05}, "created": {"value": false, "score": 3.916025161743164e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999060332775116}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[7]", "normalizedForm": "[7]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "xsimd", "normalizedForm": "xsimd", "offsetStart": 134, "offsetEnd": 139, "boundingBoxes": [{"p": 4, "x": 121.559, "y": 226.062, "w": 25.65, "h": 9.387}]}, "language": {"rawForm": "C++", "normalizedForm": "C++", "wikidataId": "Q2407", "offsetStart": 297, "offsetEnd": 300, "boundingBoxes": [{"p": 4, "x": 70.9199, "y": 200.022, "w": 18.762, "h": 9.387}]}, "context": "There is no shortage of C++ header-only math libraries providing effi- cient, optimized SIMD versions of their routines: Eigen, MIPP, xsimd and xtensor, SIMD Every- where (SIMDe), Highway, and many more.", "mentionContextAttributes": {"used": {"value": false, "score": 4.202127456665039e-05}, "created": {"value": false, "score": 3.916025161743164e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.202127456665039e-05}, "created": {"value": false, "score": 3.916025161743164e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Eigen", "normalizedForm": "Eigen", "offsetStart": 135, "offsetEnd": 140, "boundingBoxes": [{"p": 4, "x": 167.639, "y": 382.063, "w": 24.45, "h": 9.387}]}, "url": {"rawForm": "https://eigen.tuxfamily.org)", "normalizedForm": "https://eigen.tuxfamily.org)"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Thus, when compil- ing those packages for the baseline ISA, one misses out on all the vectorized implementa- tions that libraries like Eigen provide.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0020949840545654297}, "created": {"value": false, "score": 6.377696990966797e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999060332775116}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[7]", "normalizedForm": "[7]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Eigen", "normalizedForm": "Eigen", "offsetStart": 137, "offsetEnd": 142, "boundingBoxes": [{"p": 4, "x": 58.92, "y": 563.621, "w": 24.45, "h": 9.387}]}, "url": {"rawForm": "https://eigen.tuxfamily.org)", "normalizedForm": "https://eigen.tuxfamily.org)"}, "language": {"rawForm": "C++", "normalizedForm": "C++", "wikidataId": "Q2407", "offsetStart": 108, "offsetEnd": 111, "boundingBoxes": [{"p": 4, "x": 135.0, "y": 550.541, "w": 18.762, "h": 9.387000000000057}]}, "context": "Distributions such as Debian and Fedora that provide pre-built binaries miss out on SIMD optimizations of C++ header-only libraries like Eigen because they provide binaries targeting the baseline CPU architecture so that those binaries run on any CPU.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00026035308837890625}, "created": {"value": false, "score": 3.725290298461914e-05}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999060332775116}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[7]", "normalizedForm": "[7]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ceres", "normalizedForm": "Ceres", "offsetStart": 141, "offsetEnd": 146, "boundingBoxes": [{"p": 4, "x": 58.92, "y": 460.061, "w": 23.8845, "h": 9.387}]}, "context": "It can have a very concrete impact on performance since many scientific packages-the ARPACK- NG library for solving eigenvalue problems, the Ceres solver for optimization problems, the FEn- iCSx platform for solving differential equations, to name a few-depend on Eigen.", "mentionContextAttributes": {"used": {"value": false, "score": 4.4405460357666016e-05}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.4405460357666016e-05}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "xtensor", "normalizedForm": "xtensor", "offsetStart": 144, "offsetEnd": 151, "boundingBoxes": [{"p": 4, "x": 171.84, "y": 226.062, "w": 29.071875000000002, "h": 9.387}]}, "context": "There is no shortage of C++ header-only math libraries providing effi- cient, optimized SIMD versions of their routines: Eigen, MIPP, xsimd and xtensor, SIMD Every- where (SIMDe), Highway, and many more.", "mentionContextAttributes": {"used": {"value": false, "score": 4.202127456665039e-05}, "created": {"value": false, "score": 3.916025161743164e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.202127456665039e-05}, "created": {"value": false, "score": 3.916025161743164e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix", "normalizedForm": "guix", "offsetStart": 147, "offsetEnd": 151, "boundingBoxes": [{"p": 5, "x": 174.484, "y": 607.218, "w": 15.86, "h": 6.408}]}, "context": "$ guix shell eigen-benchmarks --tune guix shell: tuning for CPU skylake [env]$ guix package --export-manifest \\ -p $GUIX ENVIRONMENT (use-modules (guix transformations))  (define transform1 (options->transformation '((tune .", "mentionContextAttributes": {"used": {"value": false, "score": 0.013786375522613525}, "created": {"value": false, "score": 3.2782554626464844e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.790754497051239}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Eigen", "normalizedForm": "Eigen", "offsetStart": 156, "offsetEnd": 161, "boundingBoxes": [{"p": 3, "x": 304.44, "y": 654.583, "w": 24.45, "h": 9.387}]}, "url": {"rawForm": "https://eigen.tuxfamily.org)", "normalizedForm": "https://eigen.tuxfamily.org)", "offsetStart": 6018, "offsetEnd": 6046, "boundingBoxes": [{"p": 3, "x": 122.6785, "y": 667.542, "w": 111.986, "h": 9.387000000000057}]}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "For example, on a modest In- tel CORE i7 processor (of the Skylake gen- eration), the AVX2-optimized version of the dense matrix multiplication routines of Eigen (https://eigen.tuxfamily.org),", "mentionContextAttributes": {"used": {"value": true, "score": 0.995511531829834}, "created": {"value": false, "score": 6.622076034545898e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999060332775116}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[7]", "normalizedForm": "[7]", "refKey": 6, "offsetStart": 9904, "offsetEnd": 9908, "boundingBoxes": [{"p": 4, "x": 189.36, "y": 589.541, "w": 12.256499999999988, "h": 9.387000000000057}]}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Every-", "normalizedForm": "Every", "offsetStart": 158, "offsetEnd": 164, "boundingBoxes": [{"p": 4, "x": 240.72, "y": 226.062, "w": 28.456400000000002, "h": 9.387}]}, "context": "There is no shortage of C++ header-only math libraries providing effi- cient, optimized SIMD versions of their routines: Eigen, MIPP, xsimd and xtensor, SIMD Every- where (SIMDe), Highway, and many more.", "mentionContextAttributes": {"used": {"value": false, "score": 4.202127456665039e-05}, "created": {"value": false, "score": 3.916025161743164e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.202127456665039e-05}, "created": {"value": false, "score": 3.916025161743164e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "guix", "normalizedForm": "guix", "offsetStart": 160, "offsetEnd": 164, "boundingBoxes": [{"p": 5, "x": 343.92, "y": 154.219, "w": 15.865, "h": 6.408}]}, "context": "Like other transformation options, --tune is accepted by all the commands; for example, here is how you would build a Docker image tuned for a particular CPU:  guix pack -f docker -S /bin=bin eigen-benchmarks --tune=skylake", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011371374130249023}, "created": {"value": false, "score": 1.6391277313232422e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.790754497051239}, "created": {"value": false, "score": 0.0011042356491088867}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ld.so", "normalizedForm": "ld.so", "offsetStart": 169, "offsetEnd": 174, "boundingBoxes": [{"p": 4, "x": 130.56, "y": 57.585, "w": 24.1875, "h": 8.442}]}, "context": "GCC not only generates these versions, but also generates code to choose the right function version for the host CPU at load time, with support from the dynamic linker, ld.so.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000209808349609375}, "created": {"value": false, "score": 0.0005410909652709961}, "shared": {"value": false, "score": 8.100271224975586e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.000209808349609375}, "created": {"value": false, "score": 0.0005410909652709961}, "shared": {"value": false, "score": 8.100271224975586e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GMP library", "normalizedForm": "GMP library", "offsetStart": 178, "offsetEnd": 189, "boundingBoxes": [{"p": 3, "x": 497.16, "y": 497.742, "w": 56.849999999999966, "h": 9.387}]}, "context": "Many pieces of performance-critical software al- ready use this technique: the C standard library (libc) contains multiple versions of its string handling and math routines, the GMP library for multi-precision arithmetic uses FMV, and so do software packages ranging from cryptogra- phy libraries (Libgcrypt, Nettle) to linear algebra (OpenBLAS, FFTW).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CentOS", "normalizedForm": "CentOS", "offsetStart": 182, "offsetEnd": 188, "boundingBoxes": [{"p": 4, "x": 284.16, "y": 122.142, "w": 33.198, "h": 9.387}]}, "context": "This is because they build upon software provided by the host system-the compiler tool chain, \"system\" libraries, etc.-and that founda- tion differs from one system to another-e.g., CentOS might provide some version of GCC, and Ubuntu might provide another.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003056526184082031}, "created": {"value": false, "score": 0.0003352165222167969}, "shared": {"value": false, "score": 3.874301910400391e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003056526184082031}, "created": {"value": false, "score": 0.0003352165222167969}, "shared": {"value": false, "score": 4.947185516357422e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FEn-\niCSx", "normalizedForm": "FEn- iCSx", "offsetStart": 188, "offsetEnd": 197, "boundingBoxes": [{"p": 4, "x": 248.16, "y": 460.061, "w": 21.01649999999998, "h": 9.387}, {"p": 4, "x": 58.92, "y": 473.021, "w": 20.97, "h": 9.387}]}, "context": "It can have a very concrete impact on performance since many scientific packages-the ARPACK- NG library for solving eigenvalue problems, the Ceres solver for optimization problems, the FEn- iCSx platform for solving differential equations, to name a few-depend on Eigen.", "mentionContextAttributes": {"used": {"value": false, "score": 4.4405460357666016e-05}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.4405460357666016e-05}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ubuntu", "normalizedForm": "Ubuntu", "offsetStart": 228, "offsetEnd": 234, "boundingBoxes": [{"p": 4, "x": 284.16, "y": 135.102, "w": 31.29, "h": 9.387}]}, "context": "This is because they build upon software provided by the host system-the compiler tool chain, \"system\" libraries, etc.-and that founda- tion differs from one system to another-e.g., CentOS might provide some version of GCC, and Ubuntu might provide another.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003056526184082031}, "created": {"value": false, "score": 0.0003352165222167969}, "shared": {"value": false, "score": 3.874301910400391e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003056526184082031}, "created": {"value": false, "score": 0.0003352165222167969}, "shared": {"value": false, "score": 3.874301910400391e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Eigen", "normalizedForm": "Eigen", "offsetStart": 264, "offsetEnd": 269, "boundingBoxes": [{"p": 4, "x": 179.64, "y": 485.981, "w": 22.587500000000002, "h": 9.387}]}, "url": {"rawForm": "https://eigen.tuxfamily.org)", "normalizedForm": "https://eigen.tuxfamily.org)"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "It can have a very concrete impact on performance since many scientific packages-the ARPACK- NG library for solving eigenvalue problems, the Ceres solver for optimization problems, the FEn- iCSx platform for solving differential equations, to name a few-depend on Eigen.", "mentionContextAttributes": {"used": {"value": false, "score": 4.4405460357666016e-05}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999060332775116}, "created": {"value": false, "score": 0.006320595741271973}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[7]", "normalizedForm": "[7]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Libgcrypt", "normalizedForm": "Libgcrypt", "offsetStart": 298, "offsetEnd": 307, "boundingBoxes": [{"p": 3, "x": 405.11863636363637, "y": 536.743, "w": 38.86772727272728, "h": 9.387}]}, "context": "Many pieces of performance-critical software al- ready use this technique: the C standard library (libc) contains multiple versions of its string handling and math routines, the GMP library for multi-precision arithmetic uses FMV, and so do software packages ranging from cryptogra- phy libraries (Libgcrypt, Nettle) to linear algebra (OpenBLAS, FFTW).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Nettle", "normalizedForm": "Nettle", "offsetStart": 309, "offsetEnd": 315, "boundingBoxes": [{"p": 3, "x": 451.68, "y": 536.743, "w": 24.905571428571427, "h": 9.387}]}, "context": "Many pieces of performance-critical software al- ready use this technique: the C standard library (libc) contains multiple versions of its string handling and math routines, the GMP library for multi-precision arithmetic uses FMV, and so do software packages ranging from cryptogra- phy libraries (Libgcrypt, Nettle) to linear algebra (OpenBLAS, FFTW).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OpenBLAS", "normalizedForm": "OpenBLAS", "offsetStart": 336, "offsetEnd": 344, "boundingBoxes": [{"p": 3, "x": 349.48651, "y": 549.823, "w": 44.53208000000001, "h": 9.387}]}, "context": "Many pieces of performance-critical software al- ready use this technique: the C standard library (libc) contains multiple versions of its string handling and math routines, the GMP library for multi-precision arithmetic uses FMV, and so do software packages ranging from cryptogra- phy libraries (Libgcrypt, Nettle) to linear algebra (OpenBLAS, FFTW).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FFTW", "normalizedForm": "FFTW", "offsetStart": 346, "offsetEnd": 350, "boundingBoxes": [{"p": 3, "x": 403.2, "y": 549.823, "w": 22.79, "h": 9.387}]}, "context": "Many pieces of performance-critical software al- ready use this technique: the C standard library (libc) contains multiple versions of its string handling and math routines, the GMP library for multi-precision arithmetic uses FMV, and so do software packages ranging from cryptogra- phy libraries (Libgcrypt, Nettle) to linear algebra (OpenBLAS, FFTW).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00040227174758911133}, "created": {"value": false, "score": 0.00016164779663085938}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Linux", "normalizedForm": "Linux", "offsetStart": 369, "offsetEnd": 374, "boundingBoxes": [{"p": 2, "x": 466.0133333333333, "y": 574.903, "w": 28.116666666666667, "h": 9.387}]}, "context": "The author remembers advice heard at the be- ginning of their career in HPC-advice still given today-: that to get optimal MPI performance, you would have to use the vendor-provided MPI library; that to get your code to perform well on this new cluster, you would have to recompile the complete software stack locally; that using generic, pre-built binaries from a GNU/Linux distribution will not give you good performance.", "mentionContextAttributes": {"used": {"value": false, "score": 0.47950077056884766}, "created": {"value": false, "score": 0.00045114755630493164}, "shared": {"value": false, "score": 4.351139068603516e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.47950077056884766}, "created": {"value": false, "score": 0.00045114755630493164}, "shared": {"value": false, "score": 4.351139068603516e-06}}}], "references": [{"refKey": 6, "tei": "<biblStruct xml:id=\"b6\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">The Spack package manager</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Todd</forename><surname>Gamblin</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Matthew</forename><surname>Legendre</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Michael</forename><forename type=\"middle\">R</forename><surname>Collette</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Gregory</forename><forename type=\"middle\">L</forename><surname>Lee</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Adam</forename><surname>Moody</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Bronis</forename><forename type=\"middle\">R</forename><surname>De Supinski</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Scott</forename><surname>Futral</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1145/2807591.2807623</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis</title>\n\t\t<meeting>the International Conference for High Performance Computing, Networking, Storage and Analysis</meeting>\n\t\t<imprint>\n\t\t\t<publisher>ACM</publisher>\n\t\t\t<date type=\"published\" when=\"2015-11-15\">2015</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 7, "tei": "<biblStruct xml:id=\"b7\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Modern Scientific Software Management Using EasyBuild and Lmod</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Markus</forename><surname>Geimer</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Kenneth</forename><surname>Hoste</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Robert</forename><surname>Mclay</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1109/hust.2014.8</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">2014 First International Workshop on HPC User Support Tools</title>\n\t\t<imprint>\n\t\t\t<publisher>IEEE</publisher>\n\t\t\t<date type=\"published\" when=\"2014-11\">2014</date>\n\t\t\t<biblScope unit=\"page\" from=\"41\" to=\"51\" />\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 92503, "id": "7a11e4d16a35cc40187b2db605c9054b3052f03b", "metadata": {"id": "7a11e4d16a35cc40187b2db605c9054b3052f03b"}, "original_file_path": "../../datalake/downloads/ART/hal-03604971.pdf", "file_name": "hal-03604971.pdf"}